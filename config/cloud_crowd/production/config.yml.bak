<% secrets = YAML.load_file('secrets/secrets.yml')[ENV['RAILS_ENV']] %>
# The URL where you're planning on running the central server/queue/database.
:central_server:      <%= secrets['central_server'] %>

:disabled_actions:
  - backup_database

# The following settings allow you to control the number of workers that can run
# on a given node, to prevent the node from becoming overloaded. 'max_workers'
# is a simple cap on the maximum number of workers a node is allowed to run
# concurrently. 'max_load' is the maximum (one-minute) load average, above which
# a node will refuse to take new work. 'min_free_memory' is the minimum amount
# of free RAM (in megabytes) a node is allowed to have, below which no new
# workers are run. These settings may be used in any combination.
:max_workers:         5
# :max_load:            5.0
:min_free_memory:     10

# The storage back-end that you'd like to use for intermediate and final results
# of processing. 's3' and 'filesystem' are supported. 'filesystem' should only
# be used in development, on single-machine installations, or networked drives.
# If you *are* developing an action, filesystem is certainly faster and easier.
:storage:             s3

# Please provide your AWS credentials for S3 storage of job output.
:aws_access_key:      <%= secrets['aws_access_key'] %>
:aws_secret_key:      <%= secrets['aws_secret_key'] %>

# Choose an S3 bucket to store all CloudCrowd output, and decide if you'd like
# to keep all resulting files on S3 private. If so, you'll receive authenticated
# S3 URLs as job output, good for 24 hours. If left public, you'll get the
# straight URLs to the files on S3.
:s3_bucket:           dcloud_crowd_production
:s3_authentication:   no

# If you're using the 'filesystem' storage, perhaps with an NFS share or
# something similar, all files will be saved inside of the 'local_storage_path'.
# The default value if left unspecified is '/tmp/cloud_crowd_storage'.
# :local_storage_path:  /tmp/cloud_crowd_storage

# Use HTTP Basic Auth for all requests? (Includes all internal worker requests
# to the central server). If yes, specify the login and password that all
# requests must provide for authentication.
:http_authentication: no
:login:               documentcloud
:password:            <%= secrets['db_password'] %>

# By default, CloudCrowd looks for installed actions inside the 'actions'
# subdirectory of this configuration folder. 'actions_path' allows you to load
# additional actions from a location of your choice.
:actions_path:        app/actions

# The number of separate attempts that will be made to process an individual
# work unit, before marking it as having failed.
:work_unit_retries:   1