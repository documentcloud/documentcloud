# load environment specific information for the proxy cache.
include documentcloud/cache_env.conf;

location / {
  # Reverse proxy cache
  proxy_pass http://localhost:8765; # the location/app to proxy to.
  proxy_cache default;              # the name of the cache we'll use.

  # TODO MAKE SURE TO INCLUDE HTTP AUTH IN THE CACHE KEYS
  # `proxy_cache_key` specifies the inputs for how each cache entry's hash is calculated.
  # In this case we want to also consider the cookie `document_cloud_session` when evaluating
  # whether a resource is cached or not.
  #
  # As a consequence, logged in users will be able to make requests and skip the cache.
  # All anonymous users will recieve a cached copy of a particular resource.
  proxy_cache_key "$scheme$proxy_host$request_uri $cookie_dc_logged_in";

  # In the event that many requests are made for the exact same resource
  # (as defined by the cache key) `proxy_cache_lock` will gate all of the requests
  # and only make a single request to the upstream application.  Upon receipt of
  # the upstream response, nginx will respond to all of the incoming requests.
  #proxy_cache_lock on;

  #proxy_cache_use_stale updating;
  #proxy_cache_min_uses 5; # the number of times a resource must be requested before it is cached.

  #proxy_cache_revalidate on;
  #proxy_busy_buffers_size size;

  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Host $http_host;
  #proxy_redirect off;
  proxy_set_header X-Real-IP $remote_addr;

  add_header X-Cache-Status $upstream_cache_status;
}